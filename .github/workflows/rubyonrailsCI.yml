---

name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Ruby 3.0.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.2
    - name: Install rubocop and run it
      run: |
        gem install rubocop rubocop-rails
        bundle install --jobs 4 --retry 3
        bundle exec rubocop --require rubocop-rails -A


  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Ruby and gems
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Run tests
      run: bin/rake
  
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rubytodo-ci
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

...